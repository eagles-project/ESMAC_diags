# data paths and filenames
model_input_path: '/pscratch/sd/a/avarble/eagles/scream/'  # '../raw_data/rrm/ena_rrm/', '../raw_data/rrm/emis_rrm/', '../raw_data/rrm/nep_rrm/', '../raw_data/rrm/so_rrm/', or '../raw_data/model/'
model_2d_input_filehead: 'scream_output.test.1hourlyINST_2Dvars_ne256.h.AVERAGE.nhours_x1'  # 'ena_ne32x32pg2', 'cus_emis_ne32x32pg2', 'nep_ne32x32pg2', 'so_ne32x32pg2', or 'E3SMv2_SGP_ENA_2011_2020'
model_3d_input_filehead: 'scream_output.test.1hourlyINST_3Dvars_ne256.h.AVERAGE.nhours_x1'

obs_input_path: '../raw_data/obs/'

# # model longitude and latitude limits
# latmin: 37
# latmax: 42
# lonmin: 330
# lonmax: 335

# time frequency in seconds
model_aircraft_dt: 60      #interpolated
model_surface_dt: 3600     #instantaneous
model_profile_dt: 3600     #instantaneous
obs_aircraft_dt: 60        #median or average    
obs_surface_dt: 300        #median or average
obs_satellite_dt: 3600     #instantaneous

# model variable names
E3SMsubdomain: False
E3SMdomain_range: '' # '_330e_to_335e_37n_to_42n' for ENA; '_260e_to_265e_34n_to_39n' for SGP

# model array dimension names
time_dim: 'time'
lon_dim: 'lon'   # if 2D lat-lon
lat_dim: 'lat'   # if 2D lat-lon
latlon_dim: 'ncol'      # if 1D lat-lon
vert_dim: 'lev'
vert_dim_bnd: 'ilev'

latlon_dimensions: 1

# flag for model aerosol variables output
aerosol_output: False

# flag for COSP MODIS simulator output
cosp_output: False

# flag for pressure level output
pres_output: True

# # flag for hydrometeor mass output
# masscontent_output: False

# flag for drop size distribution parameter output
dsd_output: False

# flag for column effective radius output
reff_output: False

# flag for whether model uses deep convective parameterization
convectiveparam: False

# flag for whether rain mass and number concentrations are outputted
rain_output: True

# flag for 3D visible optical depth output
tau3d_output: False

# flag for column-integrated cloud drop number concentration output
colnc_output: False

# flag for absorbing AOD output
aodabs_output: False

# flags for whether net or clear sky radiation fluxes are outputted
netradiation_output: False
clrskyradiation_output: False

# model output variable names
LON: 'lon'
LAT: 'lat'
PS: 'PS'

P0: 'P0'        # if pres_output = False
HYAM: 'hyam'    # if pres_output = False
HYBM: 'hybm'    # if pres_output = False
PRES: 'p_mid'   # if pres_output = True

Z: 'Z3'         # z_mid
T: 'T'          # T_mid
Q: 'Q'          # qv
U: 'U'          # u
V: 'V'          # v
CF: 'CLOUD'     # cldfrac_tot_for_analysis
CFLIQ: 'FREQL'  # cldfrac_liq
# LWC: 'LWC'      # if masscontent_output = True
# IWC: 'IWC'      # if masscontent_output = True
QC: 'qc'    # qc, CLDLIQ
QI: 'qi'    # qi, CLDICE
NC: 'nc'    # nc, NUMLIQ, ICWNC (in cloud)
NI: 'ni'    # ni, NUMICE, ICINC (in cloud)
QR: 'qr'        # if rain_output = True
NR: 'nr'        # if rain_output = True

LAMBDA_CLOUD: 'lambda_cloud' # if dsd_output = True
MU_CLOUD: 'mu_cloud'         # if dsd_output = True

REL: 'REL'      # if reff_output = True
REI: 'REI'     # if reff_output = True  (not currently used)

TS: 'T_2m'  # T_2m, TREFHT
RH: 'RelativeHumidity'    # RelativeHumidity, RELHUM
LWP: 'LiqWaterPath'   # LiqWaterPath, TGCLDLWP
IWP: 'IceWaterPath'   # IceWaterPath, TGCLDIWP
RWP: 'RainWaterPath'
CLDHGH: 'cldhgh'  # cldhgh, CLDHGH
CLDMED: 'cldmed'  # cldmed, CLDMED
CLDLOW: 'cldlow'  # cldlow, CLDLOW
CLDTOT: 'cldtot'  # cldtot, CLDTOT

PRECIPSFCTOT: 'PRECT'                     # if convectiveparam = True
PRECIPSFCCONV: 'PRECC'                    # if convectiveparam = True
PRECIPSFCSTRAT: 'PRECL'                   # if convectiveparam = True
PRECIPSFCLIQ: 'precip_liq_surf_mass_flux' # if convectiveparam = False
PRECIPSFCICE: 'precip_ice_surf_mass_flux' # if convectiveparam = False

SWDOWNTOA: 'SW_flux_dn_at_model_top'  # SW_flux_dn_at_model_top, SOLIN
SWUPTOA: 'SW_flux_up_at_model_top'   # SW_flux_up_at_model_top, FSUTOA
SWDOWNSFC: 'SW_flux_dn_at_model_bot'   # SW_flux_dn_at_model_bot, FSDS
SWUPSFC: 'SW_flux_up_at_model_bot'     # if netradiation_output = False; SW_flux_up_at_model_bot
LWUPTOA: 'LW_flux_up_at_model_top'     # LW_flux_up_at_model_top, FLUT
LWDOWNSFC: 'LW_flux_dn_at_model_bot'   # LW_flux_dn_at_model_bot, FLDS
LWUPSFC: 'LW_flux_up_at_model_bot'     # if netradiation_output = False; LW_flux_up_at_model_bot
SWNETTOA: 'FSNT'    # if netradiation_output = True, FSNT
SWNETSFC: 'FSNS'    # if netradiation_output = True, FSNS
LWNETTOA: 'FLNT'    # if netradiation_output = True, FLNT
LWNETSFC: 'FLNS'    # if netradiation_output = True, FLNS
SWUPTOACLR: 'SW_clrsky_flux_up_at_model_top'      # if clrskyradiation_output = True; SW_clrsky_flux_up_at_model_top
LWUPTOACLR: 'LW_clrsky_flux_up_at_model_top'      # if clrskyradiation_output = True; LW_clrsky_flux_up_at_model_top
SWDOWNSFCCLR: 'SW_clrsky_flux_dn_at_model_bot'    # if clrskyradiation_output = True; SW_clrsky_flux_dn_at_model_bot
LWDOWNSFCLR: 'LW_clrsky_flux_dn_at_model_bot'     # if clrskyradiation_output = True; LW_clrsky_flux_dn_at_model_bot

SWCF: 'ShortwaveCloudForcing'   #ShortwaveCloudForcing, SWCF
LWCF: 'LongwaveCloudForcing'   #LongwaveCloudForcing, LWCF
LHFLX: 'surface_upward_latent_heat_flux' # surface_upward_latent_heat_flux, LHFLX
SHFLX: 'surf_sens_flux' # surf_sens_flux, SHFLX
PBLH: 'pbl_height'   # pbl_height, PBLH
AOD: 'AerosolOpticalDepth550nm'  # AerosolOpticalDepth550nm, AODALL
AODABS: 'AODABS' #Absorbing Aerosol Optical Depth (if aodabs_output = True)

TAU3D: 'TOT_CLD_VISTAU'  # if tau3d_output = True
NC2D: 'CDNUMC'           # if colnc_output = True

# variables below if aerosol_output = True
CCN1: 'CCN1'
CCN3: 'CCN3'
CCN4: 'CCN4'
CCN5: 'CCN5'
num_a1: 'num_a1'
num_a2: 'num_a2'
num_a3: 'num_a3'
num_a4: 'num_a4'
dgnd_a01: 'dgnd_a01'
dgnd_a02: 'dgnd_a02'
dgnd_a03: 'dgnd_a03'
dgnd_a04: 'dgnd_a04'
bc_a1: 'bc_a1'
bc_a3: 'bc_a3'
bc_a4: 'bc_a4'
dst_a1: 'dst_a1'
dst_a3: 'dst_a3'
mom_a1: 'mom_a1'
mom_a2: 'mom_a2'
mom_a3: 'mom_a3'
mom_a4: 'mom_a4'
ncl_a1: 'ncl_a1'
ncl_a2: 'ncl_a2'
ncl_a3: 'ncl_a3'
pom_a1: 'pom_a1'
pom_a3: 'pom_a3'
pom_a4: 'pom_a4'
so4_a1: 'so4_a1'
so4_a2: 'so4_a2'
so4_a3: 'so4_a3'
soa_a1: 'soa_a1'
soa_a2: 'soa_a2'
soa_a3: 'soa_a3'

# variables below if cosp_output = True
LWPMODIS: 'LWPMODIS'
IWPMODIS: 'IWPMODIS'
REFFLIQMODIS: 'REFCLWMODIS'
REFFICEMODIS: 'REFCLIMODIS'
TAULIQMODIS: 'TAUWMODIS'
TAUICEMODIS: 'TAUIMODIS'
TAUTOTMODIS: 'TAUTMODIS'
CFLIQMODIS: 'CLWMODIS'
CFICEMODIS: 'CLIMODIS'
CFTOTMODIS: 'CLTMODIS'
